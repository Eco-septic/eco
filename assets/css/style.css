/* assets */

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/* ! tailwindcss v3.4.13 | MIT License | https://tailwindcss.com */

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: Montserrat;
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

.container {
  width: 100%;
  padding-right: 1rem;
  padding-left: 1rem;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
    padding-right: 2rem;
    padding-left: 2rem;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
    padding-right: 4rem;
    padding-left: 4rem;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
    padding-right: 5rem;
    padding-left: 5rem;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
    padding-right: 6rem;
    padding-left: 6rem;
  }
}

.invisible {
  visibility: hidden;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.left-1\/2 {
  left: 50%;
}

.top-0 {
  top: 0px;
}

.top-1\/2 {
  top: 50%;
}

.top-2 {
  top: 0.5rem;
}

.z-10 {
  z-index: 10;
}

.z-50 {
  z-index: 50;
}

.z-\[51\] {
  z-index: 51;
}

.order-1 {
  order: 1;
}

.order-2 {
  order: 2;
}

.order-3 {
  order: 3;
}

.m-auto {
  margin: auto;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mb-9 {
  margin-bottom: 2.25rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-\[-63px\] {
  margin-top: -63px;
}

.mt-\[-65px\] {
  margin-top: -65px;
}

.block {
  display: block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.hidden {
  display: none;
}

.size-20 {
  width: 5rem;
  height: 5rem;
}

.size-5 {
  width: 1.25rem;
  height: 1.25rem;
}

.size-\[125px\] {
  width: 125px;
  height: 125px;
}

.size-\[75px\] {
  width: 75px;
  height: 75px;
}

.size-full {
  width: 100%;
  height: 100%;
}

.h-0 {
  height: 0px;
}

.h-14 {
  height: 3.5rem;
}

.h-64 {
  height: 16rem;
}

.h-\[1\.5px\] {
  height: 1.5px;
}

.h-full {
  height: 100%;
}

.w-0 {
  width: 0px;
}

.w-fit {
  width: -moz-fit-content;
  width: fit-content;
}

.w-full {
  width: 100%;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-\[0\.5\] {
  flex: 0.5;
}

.-translate-x-1\/2 {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-translate-y-1\/2 {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.appearance-none {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-between {
  justify-content: space-between;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-5 {
  gap: 1.25rem;
}

.space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

.space-y-10 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2.5rem * var(--tw-space-y-reverse));
}

.overflow-hidden {
  overflow: hidden;
}

.scroll-smooth {
  scroll-behavior: smooth;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.bg-\[\#1c93e3\] {
  --tw-bg-opacity: 1;
  background-color: rgb(28 147 227 / var(--tw-bg-opacity));
}

.bg-amber-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(251 191 36 / var(--tw-bg-opacity));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

.bg-inherit {
  background-color: inherit;
}

.bg-neutral-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

.bg-red-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(248 113 113 / var(--tw-bg-opacity));
}

.bg-slate-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(71 85 105 / var(--tw-bg-opacity));
}

.bg-slate-600\/60 {
  background-color: rgb(71 85 105 / 0.6);
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-white\/30 {
  background-color: rgb(255 255 255 / 0.3);
}

.bg-hero-default {
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 1) 19%, rgba(0, 0, 0, 1) 50%, rgba(0, 0, 0, 1) 82%, rgba(0, 0, 0, 0) 100%);
}

.fill-\[\#1c93e3\] {
  fill: #1c93e3;
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.p-1 {
  padding: 0.25rem;
}

.p-4 {
  padding: 1rem;
}

.pb-24 {
  padding-bottom: 6rem;
}

.pt-10 {
  padding-top: 2.5rem;
}

.text-center {
  text-align: center;
}

.text-2xl {
  font-size: clamp(1.95rem, 1.56vi + 1.56rem, 2.81rem);
}

.text-\[78px\] {
  font-size: 78px;
}

.text-base {
  font-size: clamp(1rem, 0.34vi + 0.91rem, 1.19rem);
}

.font-bold {
  font-weight: 700;
}

.font-extrabold {
  font-weight: 800;
}

.leading-3xl {
  line-height: clamp(2.55rem, 2.38vi + 1.85rem + 0.35rem, 2.75rem);
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.text-black\/50 {
  color: rgb(0 0 0 / 0.5);
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.shadow-\[0_0_7px_0_var\(--tw-shadow-color\)\2c 0_4px_6px_-4px_var\(--tw-shadow-color\)\] {
  --tw-shadow: 0 0 7px 0 var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);
  --tw-shadow-colored: 0 0 7px 0 var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-\[0_0_7px_0_var\(--tw-shadow-color\)\] {
  --tw-shadow: 0 0 7px 0 var(--tw-shadow-color);
  --tw-shadow-colored: 0 0 7px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-white\/15 {
  --tw-shadow-color: rgb(255 255 255 / 0.15);
  --tw-shadow: var(--tw-shadow-colored);
}

.backdrop-blur-md {
  --tw-backdrop-blur: blur(12px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-blur-sm {
  --tw-backdrop-blur: blur(4px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

@view-transition {
  navigation: auto;
}

:root {
  /* --font-size-xsm: clamp(0.6rem, 0.09vi + 0.56rem, 0.69rem);
  --font-size-sm: clamp(0.8rem, 0.17vi + 0.76rem, 0.89rem);
  --font-size-base: clamp(1rem, 0.34vi + 0.91rem, 1.19rem);
  --font-size-lg: clamp(1.25rem, 0.61vi + 1.1rem, 1.58rem);
  --font-size-xl: clamp(1.56rem, 1vi + 1.31rem, 2.11rem);
  --font-size-2xl: clamp(1.95rem, 1.56vi + 1.56rem, 2.81rem);
  --font-size-3xl: clamp(2.44rem, 2.38vi + 1.85rem, 3.75rem);
  --font-size-4xl: clamp(3.05rem, 3.54vi + 2.17rem, 5rem);
  --font-size-5xl: clamp(3.81rem, 5.18vi + 2.52rem, 6.66rem);
  --font-size-6xl: clamp(4.77rem, 7.48vi + 2.9rem, 8.88rem);
  --font-size-sm--line-height: clamp(1rem, 0.17vi + 0.76rem + 0.3rem, 1.1rem);
  --font-size-base--line-height: clamp(
    1.4rem,
    0.34vi + 0.91rem + 0.4rem,
    1.55rem
  );
  --font-size-lg--line-height: clamp(
    1.7rem,
    0.61vi + 1.1rem + 0.45rem,
    1.85rem
  );
  --font-size-xl--line-height: clamp(1.85rem, 1vi + 1.31rem + 0.3rem, 2.2rem);
  --font-size-2xl--line-height: clamp(
    2.2rem,
    1.56vi + 1.56rem + 0.35rem,
    2.5rem
  );
  --font-size-3xl--line-height: clamp(
    2.55rem,
    2.38vi + 1.85rem + 0.35rem,
    2.75rem
  );
  --font-size-4xl--line-height: clamp(
    3.15rem,
    3.54vi + 2.17rem + 0.35rem,
    3.4rem
  );
  --font-size-5xl--line-height: clamp(
    3.85rem,
    5.18vi + 2.52rem + 0.3rem,
    4.1rem
  );
  --font-size-6xl--line-height: clamp(
    4.5rem,
    7.48vi + 2.9rem + 0.35rem,
    4.9rem
  ); */
  --filter-grannary-image-url: url("data:image/svg+xml,%3C!-- svg: first layer --%3E%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='3.44' numOctaves='6' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  --arrow-onlight-icon-url: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='black' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M21 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h6'/%3E%3Cpath d='m21 3-9 9'/%3E%3Cpath d='M15 3h6v6'/%3E%3C/svg%3E");
  --arrow-ondark-icon-url: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M21 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h6'/%3E%3Cpath d='m21 3-9 9'/%3E%3Cpath d='M15 3h6v6'/%3E%3C/svg%3E");
  --bg-conic-gradient: conic-gradient(
    rgb(255 84 47) 100deg,
    rgb(255 84 47) 100deg,
    transparent 130deg
  );
}

body {
  /* @apply antialiased pt-[100lvh]; */
  /* @apply antialiased font-notion; */
  text-rendering: optimizespeed;
}

.wrapper {
  width: 100%;
  padding-right: 2rem;
}

@media (min-width: 640px) {
  .wrapper {
    max-width: 640px;
    padding-right: 4rem;
  }
}

@media (min-width: 768px) {
  .wrapper {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .wrapper {
    max-width: 1024px;
    padding-right: 8rem;
  }
}

@media (min-width: 1280px) {
  .wrapper {
    max-width: 1280px;
    padding-right: 10rem;
  }
}

@media (min-width: 1536px) {
  .wrapper {
    max-width: 1536px;
    padding-right: 12rem;
  }
}

.menu-icon-wrapper:has(input:checked) {
  svg {
    path {
      &.path1 {
        stroke-dasharray: 2901.57px, 5258.15px, 240px;
      }
      &.path2 {
        stroke-dasharray: 400px, 600px, 0px;
      }
      &.path3 {
        stroke-dasharray: 3496.56px, 6448.11px, 240px;
      }
    }
  }
}

.menu-icon-wrapper {
  pointer-events: none;
  position: relative;
  left: 0px;
  top: 0px;
  width: 2rem;
  height: 2rem;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  svg {
    position: absolute;
  }
  svg {
    top: -18px;
  }
  svg {
    left: -18px;
  }
  svg {
    transform-origin: 0 0;
  }
  svg {
    --tw-scale-x: 0.07;
    --tw-scale-y: 0.07;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
  svg {
    path {
      stroke: orangered;
      stroke-width: 40px;
      stroke-linecap: round;
      stroke-linejoin: round;
      fill: transparent;
      transition: stroke-dasharray 0.5s;
      &.path1 {
        stroke-dashoffset: 5803.15px;
        stroke-dasharray: 2901.57px, 2981.57px, 240px;
      }
      &.path2 {
        stroke-dashoffset: 800px;
        stroke-dasharray: 400px, 480px, 240px;
      }
      &.path3 {
        stroke-dashoffset: 6993.11px;
        stroke-dasharray: 3496.56px, 3576.56px, 240px;
      }
    }
  }
  .menu-icon-trigger {
    pointer-events: auto;
  }
  .menu-icon-trigger {
    position: relative;
  }
  .menu-icon-trigger {
    width: 100%;
    height: 100%;
  }
  .menu-icon-trigger {
    cursor: pointer;
  }
  .menu-icon-trigger {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
  }
  .menu-icon-trigger {
    border-style: none;
  }
  .menu-icon-trigger {
    background-image: none;
  }
}

.headerBackdrop::after {
  content: "";
  z-index: 49;
  position: absolute;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
  background-color: rgb(255 255 255 / 0.7);
  --tw-backdrop-blur: blur(12px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

@media (prefers-color-scheme: dark) {
  .headerBackdrop:not(.light *)::after {
    background-color: rgb(0 0 0 / 0.35);
  }
}

.headerBackdrop:is(.dark *)::after {
  background-color: rgb(0 0 0 / 0.35);
}

.menu-item {
  position: absolute;
  right: -100%;
  top: 4rem;
  z-index: 999;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  border-radius: 0.5rem;
  background-color: rgb(255 255 255 / 0.3);
  padding: 1.25rem;
  --tw-backdrop-blur: blur(12px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}

.peer:has(input:checked) ~ .menu-item {
  right: 1.5rem;
}

@media (prefers-color-scheme: dark) {
  .menu-item:not(.light *) {
    background-color: rgb(0 0 0 / 0.35);
  }
}

.menu-item:is(.dark *) {
  background-color: rgb(0 0 0 / 0.35);
}

@media (min-width: 768px) {
  .menu-item {
    position: relative;
    top: 0px;
    right: 0px;
    flex-direction: row;
    background-color: transparent;
    --tw-backdrop-blur:  ;
    -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
    backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  }

  @media (prefers-color-scheme: dark) {
    .menu-item:not(.light *) {
      background-color: transparent;
    }
  }

  .menu-item:is(.dark *) {
    background-color: transparent;
  }

  .menu-item {
    padding: 0px;
  }
}

.darkmode-toggle-label {
  width: 80px;
  height: 40px;
  position: relative;
  display: block;
  background: #ebebeb;
  border-radius: 40px;
  box-shadow:
    inset 0px 5px 15px rgba(0, 0, 0, 0.4),
    inset 0px -5px 15px rgba(255, 255, 255, 0.4);
  cursor: pointer;
}

.darkmode-toggle-label:after {
  content: "";
  width: 34px;
  height: 34px;
  position: absolute;
  top: 3px;
  left: 3px;
  background: linear-gradient(180deg, #ffcc89, #d8860b);
  border-radius: 180px;
  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);
}

.darkmode-toggle-input:checked + .darkmode-toggle-label:after {
  left: 75px;
  transform: translateX(-100%);
  background: linear-gradient(180deg, #777, #3a3a3a);
}

.darkmode-toggle-label,
.darkmode-toggle-label:after {
  transition: 0.3s;
}

.darkmode-toggle-label:active:after {
  width: 40px;
}

.darkmode-toggle-label svg {
  position: absolute;
  width: 24px;
  top: 8px;
  z-index: 100;
}

.darkmode-toggle-label svg.sun {
  left: 8px;
  fill: #fff;
  transition: 0.3s;
}

.darkmode-toggle-label svg.moon {
  left: 46px;
  fill: #7e7e7e;
  transition: 0.3s;
}

@media (prefers-color-scheme: dark) {
  .darkmode-toggle-input:checked + .darkmode-toggle-label svg.sun:not(.light *) {
    fill: #7e7e7e;
  }
}

.darkmode-toggle-input:checked + .darkmode-toggle-label svg.sun:is(.dark *) {
  fill: #7e7e7e;
}

@media (prefers-color-scheme: dark) {
  .darkmode-toggle-input:checked + .darkmode-toggle-label svg.moon:not(.light *) {
    fill: rgb(249, 249, 249);
  }
}

.darkmode-toggle-input:checked + .darkmode-toggle-label svg.moon:is(.dark *) {
  fill: rgb(249, 249, 249);
}

/* 
.markdown {
  @apply text-gray-900 dark:text-slate-300 font-notion;

  h1,
  h2,
  h3,
  h4,
  h5 {
    @apply tracking-tight mb-3 relative;
  }

  h1 {
    @apply text-3xl font-bold;
  }

  h2 {
    @apply text-2xl font-bold;
  }

  h3 {
    @apply text-xl font-bold;
  }

  h4 {
    @apply text-lg font-bold;
  }

  h5 {
    @apply text-base font-bold;
  }

  h6 {
    @apply text-sm font-bold;
  }

  p + h2,
  p + h3,
  ul + h2,
  ul + h3,
  ol + h2,
  ol + h3 {
    @apply mt-6;
  }

  h2 + h3 {
    @apply mt-2;
  }

  hr {
    @apply mt-4 mb-10  bg-black dark:bg-white dark:opacity-50  h-[1.5px] dark:h-[1px];
  }

  p {
    @apply text-base leading-relaxed font-normal;
  }

  a {
    @apply underline underline-offset-[3px] decoration-[0.2px];
  }

  a:hover {
    @apply text-blue-800;
  }
  a:active {
    @apply text-red-800;
  }

  ul {
    @apply list-disc pl-4;
  }

  ol {
    @apply list-decimal pl-4;
  }

  blockquote {
    @apply border-l-2 border-gray-200 pl-3 mt-6 mb-8;
  }

  .highlight {
    @apply my-2 bg-[#2b2b2b];
    pre {
      @apply text-sm m-0 p-4 bg-[#2b2b2b];

      code {
        @apply bg-none p-0;
      }
    }
  }

  pre:has(code) {
    @apply p-2 m-4 bg-[#2b2b2b] rounded-lg text-inherit overflow-x-auto;
  }

  pre {
    @apply bg-[#2b2b2b];
    code {
      @apply text-sm  font-mono;
    }
  }

  code {
    @apply bg-gray-200 px-1 rounded-md text-inherit;
  }
}

@layer utilities {
  .shareIcon {
    @apply dark:bg-onDark-icon-share pr-2 bg-onLight-icon-share  bg-no-repeat bg-right-top bg-[length:8px_8px];
  }
  .noShareIcon {
    @apply pl-[0px] dark:bg-none bg-none;
  }
}


.animationLine:hover::before {
  @apply absolute bg-conic-gradient left-0 top-[-50%] -z-10 h-[100%] w-[100%] origin-bottom animate-borderSpin md:content-[''];
}

.curlyBraces::after {
  content: "}";
  @apply text-primary font-bold -right-2 -top-[1px];
}
.curlyBraces::before {
  content: "{";
  @apply text-primary font-bold -left-2 -top-[1px];
}

.curlyBracesHeader::after,
.curlyBracesHeader::before {
  view-transition-name: curly;
}
.curlyBracesHeader::after {
  content: "}";
  @apply text-primary font-bold absolute -right-2 -top-[1px];
}
.curlyBracesHeader::before {
  content: "{";
  @apply text-primary font-bold absolute -left-2 -top-[1px];
}

.menu-icon-wrapper:has(input:checked) {
  svg {
    path {
      &.path1 {
        stroke-dasharray: 2901.57px, 5258.15px, 240px;
      }
      &.path2 {
        stroke-dasharray: 400px, 600px, 0px;
      }
      &.path3 {
        stroke-dasharray: 3496.56px, 6448.11px, 240px;
      }
    }
  }
}
.menu-icon-wrapper {
  @apply relative left-0 top-0 size-8 pointer-events-none transition-all;
  svg {
    @apply absolute -top-[18px] -left-[18px] scale-[0.07] origin-[0_0];

    path {
      stroke: orangered;
      stroke-width: 40px;
      stroke-linecap: round;
      stroke-linejoin: round;
      fill: transparent;
      transition: stroke-dasharray 0.5s;
      &.path1 {
        stroke-dashoffset: 5803.15px;
        stroke-dasharray: 2901.57px, 2981.57px, 240px;
      }
      &.path2 {
        stroke-dashoffset: 800px;
        stroke-dasharray: 400px, 480px, 240px;
      }
      &.path3 {
        stroke-dashoffset: 6993.11px;
        stroke-dasharray: 3496.56px, 3576.56px, 240px;
      }
    }
  }
  .menu-icon-trigger {
    @apply relative size-full cursor-pointer pointer-events-auto bg-none border-none appearance-none;
  }
}

.headerBackdrop::after {
  content: "";
  z-index: 49;
  @apply bg-white/70 dark:bg-black/35 backdrop-blur-md top-0 left-0 right-0 bottom-0 absolute;
}

.menu-item {
  @apply peer-has-[input:checked]:right-6 transition-all duration-300 -right-full flex gap-4 flex-col top-16 p-5 z-[999] rounded-lg absolute bg-white/30 dark:bg-black/35 backdrop-blur-md;
  @apply md:flex-row md:top-0 md:bg-transparent md:dark:bg-transparent md:backdrop-blur-none md:relative md:right-0;
  @apply md:p-0;
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
}

@keyframes fade-out {
  to {
    opacity: 0;
  }
}

@keyframes slide-from-right {
  from {
    transform: translateX(100%);
  }
}

@keyframes slide-to-left {
  to {
    transform: translateX(-100%);
  }
}

@media (prefers-reduced-motion) {
  ::view-transition-group(*),
  ::view-transition-old(*),
  ::view-transition-new(*) {
    animation: none !important;
  }
}

.swipe_left {
  view-transition-name: swipe_left;
}

::view-transition-old(swipe_left) {
  animation:
    90ms cubic-bezier(0.4, 0, 1, 1) both fade-out,
    300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-to-left;
}

::view-transition-new(swipe_left) {
  animation:
    210ms cubic-bezier(0, 0, 0.2, 1) 90ms both fade-in,
    300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-from-right;
}

main {
  view-transition-name: main;
}

.curlyBracesHeader::after {
  view-transition-name: after;
}
.curlyBracesHeader::before {
  view-transition-name: before;
}

.pagination {
  @apply flex items-center space-x-1;
}

.page-item {
  @apply px-3 py-1 text-sm font-medium border border-gray-300 rounded-md bg-white text-gray-700;
}

.page-item.active {
  @apply bg-primary text-white border-transparent;
}

.page-item.disabled {
  @apply bg-gray-200 hover:*:text-gray-400 border-gray-300;
}

.page-item a {
  @apply block no-underline;
}

.page-item a:hover {
  @apply text-primary;
} */

.checked\:fixed:checked {
  position: fixed;
}

.checked\:bottom-0:checked {
  bottom: 0px;
}

.checked\:left-0:checked {
  left: 0px;
}

.checked\:right-0:checked {
  right: 0px;
}

.checked\:top-0:checked {
  top: 0px;
}

.checked\:z-30:checked {
  z-index: 30;
}

.checked\:bg-red-500\/70:checked {
  background-color: rgb(239 68 68 / 0.7);
}

.checked\:opacity-25:checked {
  opacity: 0.25;
}

.hover\:h-\[200px\]:hover {
  height: 200px;
}

.hover\:cursor-pointer:hover {
  cursor: pointer;
}

.peer:checked ~ .peer-checked\:bg-darkMode {
  --tw-bg-opacity: 1;
  background-color: rgb(25 25 25 / var(--tw-bg-opacity));
}

.peer:hover ~ .peer-hover\:h-\[200px\] {
  height: 200px;
}

@media (min-width: 768px) {
  .md\:hidden {
    display: none;
  }

  .md\:h-96 {
    height: 24rem;
  }

  .md\:justify-between {
    justify-content: space-between;
  }

  .peer:hover ~ .peer-hover\:md\:flex {
    display: flex;
  }
}

@media (min-width: 1024px) {
  .lg\:h-20 {
    height: 5rem;
  }
}

@media (prefers-color-scheme: dark) {
  .dark\:h-\[1px\]:not(.light *) {
    height: 1px;
  }

  .dark\:bg-\[\#2b2431\]:not(.light *) {
    --tw-bg-opacity: 1;
    background-color: rgb(43 36 49 / var(--tw-bg-opacity));
  }

  .dark\:bg-black\/35:not(.light *) {
    background-color: rgb(0 0 0 / 0.35);
  }

  .dark\:bg-darkMode:not(.light *) {
    --tw-bg-opacity: 1;
    background-color: rgb(25 25 25 / var(--tw-bg-opacity));
  }

  .dark\:bg-slate-600\/60:not(.light *) {
    background-color: rgb(71 85 105 / 0.6);
  }

  .dark\:bg-white:not(.light *) {
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  }

  .dark\:text-slate-100:not(.light *) {
    --tw-text-opacity: 1;
    color: rgb(241 245 249 / var(--tw-text-opacity));
  }

  .dark\:text-slate-300:not(.light *) {
    --tw-text-opacity: 1;
    color: rgb(203 213 225 / var(--tw-text-opacity));
  }

  .dark\:text-slate-300\/50:not(.light *) {
    color: rgb(203 213 225 / 0.5);
  }

  .dark\:opacity-50:not(.light *) {
    opacity: 0.5;
  }

  .dark\:\*\:fill-slate-300 > *:not(.light *) {
    fill: #cbd5e1;
  }

  .checked\:dark\:bg-red-800\/70:not(.light *):checked {
    background-color: rgb(153 27 27 / 0.7);
  }
}

.dark\:h-\[1px\]:is(.dark *) {
  height: 1px;
}

.dark\:bg-\[\#2b2431\]:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(43 36 49 / var(--tw-bg-opacity));
}

.dark\:bg-black\/35:is(.dark *) {
  background-color: rgb(0 0 0 / 0.35);
}

.dark\:bg-darkMode:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(25 25 25 / var(--tw-bg-opacity));
}

.dark\:bg-slate-600\/60:is(.dark *) {
  background-color: rgb(71 85 105 / 0.6);
}

.dark\:bg-white:is(.dark *) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.dark\:text-slate-100:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(241 245 249 / var(--tw-text-opacity));
}

.dark\:text-slate-300:is(.dark *) {
  --tw-text-opacity: 1;
  color: rgb(203 213 225 / var(--tw-text-opacity));
}

.dark\:text-slate-300\/50:is(.dark *) {
  color: rgb(203 213 225 / 0.5);
}

.dark\:opacity-50:is(.dark *) {
  opacity: 0.5;
}

.dark\:\*\:fill-slate-300 > *:is(.dark *) {
  fill: #cbd5e1;
}

.checked\:dark\:bg-red-800\/70:is(.dark *):checked {
  background-color: rgb(153 27 27 / 0.7);
}
